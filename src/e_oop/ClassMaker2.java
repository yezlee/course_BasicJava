package e_oop;

public class ClassMaker2 {

	//인스턴스변수 하나를 선언하고 명시적으로 초기화 해주세요.
	
	int a = 10;
	
	//위에서 선언한 인스턴스 변수를 초기화 블럭을 사용해 초기화 해주세요.
	
	{
		a = 20;
	}
	
	//위에서 선언한 인스턴스 변수를 생성자의 파라미터를 사용해 초기화 해주세요
	//생성자는 클래스의 이름과 동일한 메서드
	// ClassMaker2(){} 이게 생성자 만든거
	
	ClassMaker2(int a){ //같은 데이터타입의 변수이름이 달라도 되지만 주로 같게 만들지. 
		this.a = a; //위에 이름을 초기화 해줌 되는거. 
	}
	
	//위에서 선언한 인스턴스 변수를 생성자를 하나 더 만들어서 초기화 해주세요
	
	// 이번엔 파라미터가 없는거 만들어봐. 갯수가 다르거나, 파라미터가 다르거나 이걸로 구분을해
	ClassMaker2(){
		this(50);
//		a = 50; 이렇게 해도 상관없지만 위에가 좀 더 좋은 코드임.
		
		
		//이렇게 세가지 방법으로 초기화를 했지만. 3개 다 할 필요 없어. 어차피 한가지 만으로도 초기화가 되니깐
		//결국엔 이렇게 하면 생성자 만들어서 한걸로 초기화 돼
	}
	
	// 초기화 순서 : 명시적 초기화 -> 초기화 블럭 -> 생성자
	// 어쨌든 마지막에 남는자는 생성자. 생성자가 대빵느낌.
}



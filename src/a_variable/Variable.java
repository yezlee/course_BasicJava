package a_variable;

import java.util.Scanner;


public class Variable {
//패키지와 클래스사이에 import를 해줌. 클래스를 지정해주는것이 임포트
	
	public static void main(String[] args) {
		//클래스에 대해 배우기 전까지 모든 코드는 이곳에 작성된다. 
		//메서드 : 명령문의 집합
		//main메서드 : 프로그램의 시작과 끝 - 얘로 시작해서 얘로 끝남
		
		
		
		/* + 추가
		 * 
		 *  public : 함수의 접근 권한(모두 오픈)
		 *  static : 정적변수, 정적함수를 의미함
		 *  void : 함수의 반환값이 없음(비움)
		 *  String[] : 문자열 배열
		 *  args : 문자열 배열의 이름
		 *  main : 예약어 - 프로그램 시작점
		 *  ()소괄호 : 매개변수를 입력 지점
		 *  {}중괄호 : 함수의 영역을 의미함 
		 *  
		 *  
		 *  실행부 : 코드가 들어가는 부분
		 *  
		 *  변수 : Variable
		 *  
		 *  
		 *  
		 *  
		 *  //  int i = 10;
		 *  -> 4바이트 메모리공간을 램에 할당해서 10이라는 값을 넣어줌
		 *  
		 *  정수형 변수를 선언하자
		 *  int : 정수형 변수선언
		 *  i : 변수이름
		 *  = : 대입연산자(오른쪽 값을 왼쪽으로 덮어쓰기)
		 *  10 : 데이터(리터럴)
		 *  ; 세미콜론 : 실행문 끝에 종료 문구
		 *  정수 : 깨끗한 수, 딱 떨어지는 수, 자연수 : -1, 0, 1, 2, 3.....
		 *  
		 *  i라는 변수에 값을 출력해보자
		 *  System.out.println(i);
		 *  
		 *  + : 문자열 연결 연산자
		 *  System.out.println("i값은" + i );
		 * 
		 * <int라는 타입을 선언합니다. int i라는 정수변수i에 10이라는 정수값을 대입합니다.
		 * 그걸 출력할때 syso(출력 축약문) 괄호안에 위와 같이 변수 i 선언을 넣어두면
		 * 결국 i 값이 선언되는 것입니다.>
		 * 
		 * 
		 * 
		 * 
		 * <변수 : 데이터를 담는 메모리공간	
		 * 정수형 변수 : 정수형 데이터를 담음>		
		 *  
		 *   // int num = 10;
		 * 
		 * <변수란 데이터를 담는 공간. 즉 저장공간 입니다.
		 * int라는 정수 타입을 선언하고, num이라는 변수 안에 
		 * 대입값은 10을 넣어 저장처리 한 것이죠. >
		 * 
		 * 
		 * 추가끝 + 
		 * */
		
		
		
		
		
		/*주석 : 프로그램 코드로 인식하지 않는 문장
		(주로 코드를 설명하는데 사용한다.)
		*/
		
//		 한줄 주석 : Ctrl + Shift + c - 블럭처리해서 단축키 이용하면 여러줄을 한꺼번에 주석처리 가능함 - 해제도 똑같은 단축키로 하면 됨.
		/* 범위 주석 : Ctrl + Shift + / (해제 : \  <-지우기 옆에 있음)*/ 
		
		/*
		 *  데이터의 종류
		 *  - 정수 : 10, -5
		 *  - 실수 : 3.15, -1.5
		 *  - 문자 : 'a', '3' - 따옴표로 묶여있는것이 문자
		 *  - 논리 : true, false - 두가지 밖에 없음
		 *  
		 *  프로그래밍에서는 데이터를 사용하기 위해 종류별로 이름을 붙여놓았다.
		 *  (자료형 / Data Type)
		 *  
		 *  기본형 타입
		 *  - 정수 : byte(1), short(2), *int(4), long(8)
		 *  - 실수 : float(4), *double(8) - 근사치를 표현 정확하게 표현이 안돼. 17 , 15자리?까지만 표현이 가능함
		 *  - 문자 : char(2) - character의 줄임말 - 문자 한 글자를 표현
		 *  - 논리 : boolean(1) - true/false를 표현함
		 *  
		 *  데이터타입은 변수를 만들때 주로 사용한다.
		 * */
 
		//상수 : 값이 변하지 않는 데이터를 상수라 함 (예 : 10, -5)
		//변수 : 값이 변하는 데이터(예: x, y)
		//변수를 만들고 변수를 조작해서 원하는 결과를 만들어 내는것이 프로그래밍의 전부라 할 수 있다.
		
		
		/*
		 * +추가
		 * 
		 * 연습문제1
		 * 정수형 변수 count를 선언하고,
		 * 5라는 값을 대입한 후에
		 * "count = 5"라고 출력하시오.
		 * 
		 * int count = 5;
		 * System.out.println("count = " + count );
		 * 
		 * 연습문제2
		 * 정수형변수 year를 선언하고,
		 * 2020 값을 대입하고, 
		 * 변수에 +(산술연산자) 10을 한 후에
		 * "2020의 10년 후는 2030"이라고 출력하시오
		 * 
		 * int year = 2020;
		 * System.out.println("2020의 10년후는 " + (year + 10) );
		 * 
		 * 
		 * 상수 : constant - 변하지 않는 수
		 *     : 변수이면서 값이 한번만 대입되는 변수
		 *     : 이름을 대문자와 _언더바를 사용함 
		 *     
		 *  final int MAX_COUNT = 100;
		 *  MAX_COUNT = 200;
		 *  
		 *  위를 보시면 count라는 변수에 5를 대입했고
		 *  타입은 int 정수타입입니다.
		 *  
		 *  출력문은 syso하고 이클립스 축약문 출력 ctrl space를 동시에 입력하면 자동 완성 됩니다.
		 *  
		 *  상수(변수처럼 값 저장공간)라고 있습니다. 프로그램 실행중 값 변경 불가능
		 *  반드시 값 초기화 선언.
		 *  변수의 타입 앞에 final 키워드 쓸 것.
		 *  ex) final int MAX_NUMBER = 10;
		 *  상수선언, 데이터타입, 상수이름 꼭 확인하기 - 상수 작성법은 이름을 대문자로 선언하고 _를 사용해 두 단어르 이어쓴다.
		 *  
		 *  
		 * 
		 */
		
		
		
		//변수를 만드는 것 : 변수 선언
		//변수를 만드는 방법 : 데이터타입과 변수이름으로 만듦 - 8가지 데이터 타입으로 만들고 이름을 붙여줌
		int name;
		
		//데이터타입을 선택할 때는 표현하고자 하는 데이터에 맞는 타입을 선택해주면 된다.
		//변수이름을 정할때는 표현하고자 하는 데이터의 의미와 부합하는 이름을 지어주면 된다.
		double pi; //실수라서 double이고 3.14를 표현하고 싶어서 pi - 공간만 생긴거지 값을 저장할수없음
		
//		long name; //빨간줄이 생기는건 에러 - 컴파일에 문제가 생긴거(컴파일 에러) - 문법상의 오류가 생겼다고 표시 - 이렇게 냅두면 안돼서 주석처리 
//		: 한 블럭({}) 안에서 변수의 이름은 중복될 수 없다. 블럭은{}중괄호를 의미함

		//메모리에 값을 저장할 수 있는 공간이 생기는것이 ->
		// = (대입연산자) : 오른쪽의 값을 왼쪽의 변수에 저장
		name = 10; //초기화 : 변수에 처음으로 값을 저장하는 것 - 처음으로 값을 저장하는걸 초기화라고 함
		pi = 3.14; //변수의 타입에 맞는 값을 저장해야한다.
		
		int abc = 30; //보통 변수를 선언하면서 동시에 초기화를 한다.
		long l = 40L; //접미사 L을 붙여야 long타입이 된다. - 실수에 L을 붙여서 롱타입이라는걸 알려주는거지 L을 안붙이면 정수값은 int타입으로 간주.  L이 대문자건 소문자건 상관없지만 숫자1과 헷갈리기 때문에 주로 대문자사용.
		float f = 5.5f; //접미사 f를 붙여야 float 타입이 된다. - f를 붙이지 않으면 실수니까 double이 됨.
		char c = '한'; //따옴표안에 한글자만 넣어야 한다. 두글자 이상 넣으면 에러발생.
		boolean b = true; // true, false 
		
		
		//8가지 기본형 타입을 사용해서 8개의 변수를 선언 및 초기화 해주세요.
		
		byte _byte = 1;
		short s = 2;
		int i = 30;
		long _long = 200L;
		float fl = 1.5f;
		double dou = 15.5;
		char ch = '자'; 
		boolean boo = false;
		
		System.out.println(name); 
		//println 괄호안에 있는 값을 출력 - 실행을 하려면 저장을 해야함!!!!! 저장을 하면 자동으로 컴파일이 됨.
		//실행 단축키 : Ctrl + F11
		
		name = 100; 
		System.out.println(name); //출력할때는 항상 출력하는 문장을 작성해야함
		
		//위에서 만든 8개의 변수에 새로운 값을 저장하고 출력해주세요.
		
		_byte = 5;
		s = 10;
		i = 50;
		_long = 500L;
		fl = 5.5f;
		dou = 55.5;
		ch = '타';
		boo = true;
		
		System.out.println(_byte);
		System.out.println(s);
		System.out.println(i);
		System.out.println(_long);
		System.out.println(fl);
		System.out.println(dou);
		System.out.println(ch);
		System.out.println(boo);
		
		/*
		 *  타입의 선택 기분
		 *  
		 *  정수
		 *  - byte, short : 메모리를 절약해야 할 때 - 주로 byte
		 *  - int : 기본 (4바이트)
		 *  - long : int의 범위(약 -20억 ~ 20억)을 벗어날 때 -long의 범위는 대략 900경
		 *  
		 *  실수
		 *  - float : 메모리를 절약해야 할 때 (int와 똑같이 4byte인데 저장하는 방식이 달라서 실수는 훨씬 더 큰 범위를 저장 할 수있음. 900경보다도 더 말도 안되게 많이) 
		 *  ㄴ 소수점 위치를 따로 저장하기 때문에 숫자 크기가 커지면 소수점만 이동해서 저장하면 되니깐 숫자 갯수가 말도 안되게 커질 수 있음 
		 *  - double : 기본 - 얘가 숫자를 더 정확하게 표현하기 때문에
		 */

		
		
		
		//문자열***************************************************************************************************
		String str = "문자 .."; //앞글자가 대문자라는건 클래스의 이름이다. 클래스는 앞글자 무조건 대문자. 앞글자가 대문자면 아 얘는 클래스구나.
		System.out.println(str);
		//변수 선언하는 방법은 8개의 기본형 타입외에 여러개가 있음 클래스도 있고 형변환도 있고 이렇게 클래스를 변수?로 타입으로 해서 만들수있음 - 참조형 타입이라고 함.
		//왜 참조형 타입이냐? 값을 직접 입력하지않고.......
		
		
		//형변환
		//다른 타입의 값을 저장하기 위해서는 값의 타입을 변경해 주어야 함. 이를 형변환(type casting)이라 한다.
		int small = 10;
		long big = 10L;
		
		// small = big; //롱타입을 인트타입으로 해려니 타입이 맞지않아서 빨간줄이뜸
		small = (int)big;
		big = small; //표현범위가 작은쪽에서 큰쪽으로의 형변환은 생략이 가능하다. 작은쪽에서 큰쪽으로 형변환을 할때는 안해줘도돼. 뭐가 작고 크냐 -> 표현범위 -바이트가 중요한게 아니고 바이트가 갖고있는 표현범위가 중요한것.
		//큰쪽에서 작은쪽을 넣으려면 데이터 손실 가능성이 있음. 그래서 형변환 해줘야해.
		
		
		/*
		 * 명명규칙 - 이름 정할 때 규칙  
		 * - 영문자 대소문자, 한글(잘사용안함), 숫자, 특수문자('_', '$') - 요거 두개만 사용할 수 있다.
		 * - 숫자로 시작할 수 없다. - 들어갈 순 있지만 맨앞에 들어가면 안됨
		 * - 예약어는 사용할 수 없다. - 예약어(keyword)는건, 자바에서 어떤 특별한 의미로 사용되는..int나 long은 타입을 나타내기 위해 사용하기 때문에 이름으로 쓸수 없음. -진한글씨가 예약어임
		 * - [낙타식 표기법을 사용한다. (mySampleVariable)] -[]대괄호의 의미는 안해도 문제는 없지만 개발자들끼리 약속. 뭐를? 낙타시표기법을 쓸때 []대괄호를 사용?
		 * - [클래스명의 첫글자는 대문자로 사용한다.(MySampleClass)] - 낙타식표기법을 사용하지만 앞글자는 대문자로
		 * 
		 * 
		 * <변수의 이름을 짓는 법>
		 * 1.영소문자로 시작해야함
		 * 2.숫자나 특수기호로 시작하면 안됨
		 * 3.중간에 공백이나 특수기호_$ 사용가능
		 * 4.자바 예약어를 사용할 수 없음 ex)class, void
		 * 5.중간에 언더바나 대문자 사용가능
		 * 
		 * *Camel Text 기법으로 변수이름을 짓는다
		 * 낙타등을 연상하는 낙타식 표기법을 사용
		 * 
		 * 
		 * 
		 * 
		 */
		
		
		
	/* +추가		  
	          상수(변수처럼 값 저장공간)라고 있습니다. 프로그램 실행중 값 변경 불가능
		  반드시 값 초기화(변수에 값을 선언하는것) 선언.
		  변수의 타입 앞에 final 키워드 쓸 것.
		  ex) final int MAX_NUMBER = 10;
		  상수선언, 데이터타입, 상수이름 꼭 확인하기 - 상수 작성법은 이름을 대문자로 선언하고 _를 사용해 두 단어르 이어쓴다.
		 */  
		
		
		
		/*
		 * 상수
		 * - 처음 담긴 값을 변경 할 수 없는 그릇(변수를 나타낼때 그릇이라함)
		 * - 리터럴에 의미를 부여하기 위해 사용한다. 수학에서 사용하는 상수를 리터럴이라함
		 * */

		final int MAX_NUMBER = 10; //수학에선 상수지만 코드로는 리터럴이라함 - 변수와 구분하기 위해 대문자를 사용. 띄워써야 할때는 _언더바 사용
		//MAX_NUMBER = 100;  //컴파일 에러발생. 한번 초기화 해주면 변경이 안됨.

		
		//출력
		System.out.print("줄바꿈을 하지 않는다."); //ln이 line
		System.out.print("줄바꿈을 하지\n않는다."); // \n 하게되면 줄바꿈을 하게됨 
		System.out.println("줄바꿈을\t한다." + name); // t는 tab. 탭은 스페이스 4개 + 타입 넣어주면 변수가 입력이됨
		System.out.printf("문자열:%s, 숫자:%d", "Hello", 10); //문자열하고 숫자하고 같이 출력할때 f를 써줌 
		//출력 포맷을 지정한다. 출력하면 -> 문자열:Hello, 숫자:10
		//%는 뭔가를 넣게다는거, s문자를 d는 숫자를
		System.out.println();
		System.out.println("A" + 100); //문자를 만나면 숫자가 문자열화 됨.
		System.out.println(10 + 20 + "30"); //순서대로 해석해. 그래서 10+20 사칙연산을 먼저 계산하고 30뒤에 문자열화 되어서 출력
		System.out.println("10" + 20 + 30); //"10"이렇게 하면 문자열. 뒤에 있는 20도 같이 문자열되고 그 둘이 계산한 값이 1020 그리고 뒤에 30이랑 계산할때 또 30이 문자열돼서 102030이 된다.
		//근데 수학이랑 같이 ()를 쳐주게 되면 먼저 계산이 됨
		System.out.println("10" + (20 + 30)); 
		
		
		
		
		
		//입력
		/*Scanner sc = new Scanner(System.in); //입력받기 위한 클래스  / System.in은 입력한 값을 바이트 단위로 읽는 것을 뜻한다. 
		//import 단축키 : Ctrl + Shift + o  클래스를 지정해주지 않았을때 단축키를 사용하면 자동으로 클래스를 지정해줌 import해줌
		System.out.println("아무거나 입력해주세요>");
		String str2 = sc.nextLine(); //사용자한테 입력을 받을수있음 - 사용자가 입력을 하고 엔터를 치면 다시 실행이됨. 뭔가를 입력할때까지 기다려. 실행이 멈춰. //string은 문자
		System.out.println("입력받은 내용 : " + str2); //실행을 했는데 뭔가 입력해달라고 기다리고 있는거*/
		
		
		/*
		 *  Scanner를 사용하기 위해서 import를 통해 외부 클래스를 호출합니다.
		 *  Scanner는 java.util 패키지에 포함되어 있습니다.
		 */
		
		
		
		
		//int nextInt = sc.nextInt();
		//double nextDouble = sc.nextDouble();
		//이런것들이 있지만 버그로 인해 사용하지 않는다.
		
		/*System.out.println("int 입력>");
		int nextInt = sc.nextInt();
		System.out.println(nextInt);
		System.out.println("문자열 입력>");
		String nextLine = sc.nextLine();
		System.out.println(nextLine);
		System.out.println("입력끝!");*/
		
		// 문자열을 입력받아야하는 입력받지않고 그냥 입력끝!하고 뜸
		// int는 숫자를 받는건데 문자열 입력하고 엔터를 치는 순간 숫자가? 엔터를 받아들이면서 걍 끝남 - 버그인거지 그래서 쓰지마
	
		
		
		
		/*
		System.out.println("int 입력>");
		int number = Integer.parseInt(sc.nextLine());  //문자열을 숫자로 바꿔줌
		System.out.println(number);
		
		
//		Double.parseDouble(sc.nextLine());*/
		
		
		
		
		
		
		
		Scanner sc = new Scanner(System.in); // 얘가 있어야지 sc를 사용할수 있고, 이거를 하고 import를 해줘야지 
		
		//자신의 이름을 저장할 변수를 선언해주세요.
		
		//변수를 선언하려면 타입을 먼저 정해야함 이름은 글자이고 여러개니깐 String!!!
		
		String myName; // 이게 선언 = 하고 값을 주는게 초기화
		
		
		//위에서 선언한 변수를 초기화 하기위해 이름을 입력해주세요.
		
		System.out.println("이름을 입력해 주세요>");
		myName = sc.nextLine();
		
		//자신의 나이를 저장할 변수를 선언해주세요.
		
		int myAge;
		
		//위에서 선언한 변수를 초기화 하기 위해 나이를 입력받아주세요.
		System.out.println("나이를 입력해 주세요>");
		myAge = Integer.parseInt(sc.nextLine());

		//위에서 입력받은 이름과 나이를 출력해주세요.
		System.out.println("이름 : " + myName + "나이 : " + myAge);
	}


}
